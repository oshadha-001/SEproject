name: Java CI with Maven

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests
      run: mvn test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: target/surefire-reports/

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=8

  deploy:
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build JAR
      run: mvn -B package -DskipTests

    - name: Deploy to production
      run: echo "Deploying to production server..."
      # Add your deployment steps here, for example:
      # - name: Deploy to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.12
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: "your-app-name"
      #     heroku_email: "your-email@example.com"
